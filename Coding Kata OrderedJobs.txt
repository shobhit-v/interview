*******************************
****** ORDERED-JOBS-Kata ******
*******************************
Develop a class which calculates a plan to execute jobs depending on each other:
-	Each job is represented by a single character, e.g. 'x' or 'y'.
-	Jobs can be registered as independent or with a dependent job that needs to be executed first. 
-	The sorting returns the job names in an order so that all dependencies are considered.
-	Jobs which get registered several times only appear once in the execution plan.
-	Direct or indirect circular dependencies should be flagged by throwing an exception. This can be done upon registration or sorting.


The interface for this should look like this:
	
	interface IOrderedJobs {
		void register(char jobName, char jobNameFinishFirst);
		void registerIndependent(char jobName);
		string getSortedJobNames();
	}

	
Example:
	registerIndependent('c');
	register('b', 'a');
	register('c', 'b');
	getSortedJobNames() returns "abc"

	




